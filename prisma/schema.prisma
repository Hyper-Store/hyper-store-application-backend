// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id       String      @id @default(uuid())
  email    String      @unique
  username String      @unique
  password String 
  isBanned Boolean
  @@map("users")
}

model Service {
  id       String      @id @default(uuid())
  name     String      @unique
  imageUrl      String 
  @@map("services")
}

model Key {
  id       String      @id @default(uuid())
  key     String      @unique
  serviceId String
  validUntil Int
  status String
  keyRedeemerId String?
  @@map("keys")
}

model Signature {
  id       String @unique
  userId String
  serviceId String
  expirationDate DateTime
  
  @@id([userId, serviceId])
  @@map("signatures")
}

model UserSession {
  id       String      @id @default(uuid())
  userId String
  ip String @db.Text()
  userAgent String @db.Text()
  accessToken String @db.VarChar(255) @unique()
  acessTokenExpirationDateTime DateTime
  refreshToken String @db.VarChar(255)  @unique()
  refreshTokenExpirationDateTime DateTime
  status String
  @@map("user_sessions")
}

model Notification {
  id       String      @id @default(uuid())
  userId String?
  title String
  isGlobal Boolean
  notificationInfo String @db.Text()
  dateTimeSent DateTime
  @@map("notifications")
}


model NotificationSeen {
  id       String      @unique()
  userId String
  notificationId String
  dateTimeSeen DateTime
  
  @@id([userId, notificationId])
  @@map("notifications_seen")
}




model PrismaRabbitmqOutbox {
  id       String      @id @default(uuid())
  eventName String
  topic String
  schemaVersion String
  persistEvent Boolean @default(true)
  retry_count Int @default(0)
  error_message String? @db.LongText()
  dateTimeOccurred DateTime
  eventSchemaData String @db.LongText()
  payload String @db.LongText()
  @@map("prisma_rabbitmq_outbox")
}

model EventSourcing {
  id       String      @id @default(uuid())
  topic String
  eventName String
  schemaVersion String
  dateTimeOccurred DateTime
  persistEvent Boolean @default(true)
  payload String @db.LongText()
  @@map("event_sourcing")
}

model IdpotenceConsumer {
  @@id([eventId, consumerName])
  eventId String
  consumerName String

  @@map("idpotence_consumer")
}

